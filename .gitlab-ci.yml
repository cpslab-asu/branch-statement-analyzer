image: python:3.10-slim

stages:
  - lint
  - test
  - publish

variables:
  POETRY_VIRTUALENVS_CREATE: 0
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
      - .cache/pip

black:
  stage: lint
  before_script:
    - pip install black
  script:
    - black --check src test

isort:
  stage: lint
  before_script:
    - pip install isort
  script:
    - isort --check src test

ruff:
  stage: lint
  before_script:
    - pip install ruff
  script:
    - ruff --format gitlab src test > quality-report.json
  artifacts:
    when: always
    paths:
      - "quality-report.json"
    reports:
      codequality: "quality-report.json"

pyright:
  stage: lint
  image: node:18-bullseye
  before_script:
    - npm install -g pyright
    - apt update
    - apt install -y python3-pip
    - pip install poetry
    - poetry install --only main --only test
  script:
    - pyright

.test-job:
  stage: test
  before_script:
    - pip install poetry
    - poetry install --without dev
  script:
    - pytest --junit-xml="pytest-${PYTHON_VERSION}.xml"
  artifacts:
    when: always
    paths:
      - "pytest-${PYTHON_VERSION}.xml"
    reports:
      junit: "pytest-${PYTHON_VERSION}.xml"

test-3.9:
  extends: .test-job
  image: python:3.9
  variables:
    PYTHON_VERSION: "3.9"

test-3.10:
  extends: .test-job
  image: python:3.10
  variables:
    PYTHON_VERSION: "3.10"

test-3.11:
  extends: .test-job
  image: python:3.11
  variables:
    PYTHON_VERSION: "3.11"

.pypi:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
  before_script:
    - pip install poetry
  script:
    - poetry publish --build
  artifacts:
    untracked: false
    when: on_success
    paths:
      - dist/*.whl
